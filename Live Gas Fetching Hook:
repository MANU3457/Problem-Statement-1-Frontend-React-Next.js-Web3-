// hooks/useLiveGas.ts
import { useEffect } from 'react';
import { ethers } from 'ethers';
import { useGasStore } from '@/store/gasStore';

const ETHEREUM_WS = 'wss://eth-mainnet.g.alchemy.com/v2/YOUR_KEY';
const provider = new ethers.providers.WebSocketProvider(ETHEREUM_WS);

export const useLiveGas = () => {
  const updateGas = useGasStore((s) => s.updateGas);

  useEffect(() => {
    provider.on('block', async (blockNumber) => {
      const block = await provider.getBlock(blockNumber);
      const baseFee = Number(block.baseFeePerGas ?? 0) / 1e9;
      const priorityFee = 2; // Estimate (you can fetch real-time via eth_feeHistory if needed)
      updateGas('ethereum', baseFee, priorityFee);
    });

    return () => {
      provider.removeAllListeners();
    };
  }, []);
};
